{"appId":"winget_app_KN4CRD.JS8Call","appShortcutName":"Winget Application","appDisplayName":"JS8Call","authorId":"winget","releaseTagName":"winget-2.2.0","downloadUrls":{"1":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":null,"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Software using the JS8 Digital Mode providing weak signal keyboard to keyboard messaging to Amateur Radio Operators.\n\n\n- 2.2.0 (2020-06-25):\n- Right click station to center filter at their offset\n- Added sync button for filter center\n- Initial work for dial controls\n- Added images for dial control\n- Added up/down indicators for VFO\n- Added RX.ACTIVITY and STATION.STATUS messages to network\n- Added some sanity limits to RX.GET_TEXT\n- Fixed #296: selection color overrides\n- Fixing selection highlight on pi\n- Attempting to fix highlighting on the pi, again\n- Fixed pi selected highlight (again)\n- Fixed restoring HB enabled on startup when in slow mode\n- Added tooltip for VFO adjustment\n- Config radio tab first\n- Added heard by tooltip for group callsigns\n- Fixed bug with delayed painting of selected row change\n- Added sub-band colors\n- Added 1000Hz sub-band colors with HB as orange, and the upper limit also as orange (for other automated stations)\n- Added black border\n- Changing colors\n- Simplify widegraph color\n- Fixed legacy real array index warning. Fixed NCOSTAS warning\n- Added some decoder logging and js8 tone generation tweaks to ensure the right costas is getting generated for the right submode\n- Added audio saving with buffer offset and a compilation flag that can be used to enable it. It is enabled by default currently for testing of the function.\n- Added debug for I and some clarifying comments\n- Added configuration option to enable/disable writing of ALL.TXT / DIRECTED.TXT\n- Added option to confirm before sending autoreply message\n- Refactored function for enabling HB. Set FAST as the default mode. Added FAST support to HB\n- Added @ALLCALL to CQs and HBs to make them more clear and unify the message formatting across all directed message types\n- Remove SNR from HB automatic ACK (there's a reason...coming soon)\n- Configurable custom HB and STATUS messages\n- Fixed hiding of HB commands with new @ALLCALL prefix\n- Added dynamic menu item for autoreply with confirmation to make it more clear\n- AUTO+CONF dynamic update\n- Added tooltip to status button\n- Fixed issue with self destruct confirmation box and default behavior\n- Fixed confirmation modality and default behavior\n- Proper encoding of ACKs and NACKs for future SRARQ\n- Cleaning up HB\n- Do not overwrite SNR responses\n- Disabled HB message configuration for now\n- Added configuration option for sending SNR in HB ACKs instead of disabling completely\n- Configurable HB ACKs vs SNR is a future consideration, not for 2.2\n- Added APRSIS spotting back into the app, but this time under the APJ8CL aprs registered callsign\n- Moved APRSIS reporting into its own background thread to avoid hangups. Added ability to turn off APRSIS reporting\n- Added a couple built-in groups\n- Moving heartbeats to an HB group that is added when you enable heartbeat networking\n- Fixed hiding HB in band activity\n- Added ability to spot ssids with compound callsigns ala, KN4CRD/7\n- Initial working commit of tcp based API\n- Added tcp server configuration options\n- Added example tcp client python script\n- Fixed message id type to be qint64\n- Updated frequency dial to be propagated on RX\n- RX.DIRECTED should be sent for all directed messages that are normally written to the directed log\n- Heartbeats are directed to @HB now, so make sure that we process directed messages like that please\n- Added CQ as a directed command (directed to @ALLCALL) in the API\n- Deprecated the huff encoded frame types for a more efficient version in subsequent releases\n- Added two inbox API functions\n- Fixed bug in new API\n- Removed automatic adding of @HB group\n- Added ability to block spotting of specific callsigns if desired\n- APRSIS delay / skip percentage is now configurable on the client (not exposed to user though)\n- Added QRP and QRO groups\n- Record the frequency when a decode happens and use that for when we process the decoded message (i.e., spotting, display, etc)\n- Easily disable the transmitter with one button press\n- Added menu items that correspond to the toggle buttons in the display\n- Removed debug statement\n- Added legacy hamlib fix for rig struct\n- Merged https://bitbucket.org/hobbes1069/js8call/branch/gcc-10 gcc fortran fixes\n- Fixed response of heartbeats\n- Fixed encoding of compound SNR frames (missing snr values)\n- Spot group commands to JS8NET\n- Auto+conf is the default\n- Fixed #330: only pause the decoder while actively transmitting\n- Remove save menu debug...it doesn't work\n- Remove open file menu items when debug save is disabled\n- Bumped libgfortran to >= 8.4.0\n- Fixed bug of disappearing text on enter keypress while transmitter is disabled\n- Updated readme and install docs\n- Make missing frame indicator user configurable\n- Added detail to tooltip for call activity\n- Changed hamlib legacy define to JS8_USE_HAMLIB_THREE\n- Added TUNE button to Control Menu\n- Updated waterfall to make scroll speed configurable\n- Fixed waterfall bugs on click\n- Working through decoder fixes\n- Working through decoder fixes, getting closer\n- Improving decoder performance\n- Fixed a problem in the synchronization code that caused issues with failed decodes on signals that should be able to be decoded\n- Ensure pass 3 does subtraction if we have a fourth pass\n- Sync on ABC, AB, BC\n- Reorder nfqso reording after dedupe\n- Added rudimentary test harness with example wav audio\n- Added ability to compare results with an old js8 decoder for testing\n- Bumped max candidates to 300 (configurable) and cleaned up some sync code\n- Test alt by default, only dump if output differs\n- Moved ctwk computation to syncjs8d\n- Fixed depth=4. Removed apmask from bpd and osd.\n- Fixed decoder hang on cshift when subtracting signal\n- Added new command HEARTBEAT SNR for sending heartbeat ACKs\n- Initial experiment of no timing requirement\n- Removed debug statements from subtractjs8\n- Experimental drawing of sync state\n- Experiments in computing and setting drift automatically\n- Write notice text to UI when drifting automatically\n- Working automatic time sync based on syncStats\n- Smaller increment adjustment for drift. 1 second interval lines.\n- SyncStats should be output differently than DecoderDebug\n- Wraparound buffer for BCDEI decoders\n- Turning off auto drift experiment, only drawing sync stats\n- Working sync via 1 second timing for A mode only\n- Keeping track of last decode position\n- Back to 2.48s JZ for normal\n- Restructuring decoder for every second\n- Added checkbox for displaying decode attempts in the waterfall. Gating experiments for now\n- Expose color pallete\n- Moved experiment into own function\n- Added proper caching of message frames during dedupe with date expiration\n- Trying the experimental decode timing (more liberal decoding)\n- Updated detector to reset kin on drift\n- Added decode debug of where we start the decode\n- Added experimental auto-sync function for normal mode.\n- Record time drift when autosyncing as the drifted time\n- Cleaned up autosync/autodrift\n- Fixed total frames needed for decode in the experimental decoder\n- Cleaning up frame dedupe, decode debug, and decode buffer thresholds\n- Enable autosync for testing\n- Updated menu label\n- Moved auto sync experiment into the timing tab\n- Allow slow mode to auto sync as well\n- Fixed display bug of sync button\n- Added tooltip for sync button\n- Automatically stop time drift sync after decode by default\n- Merge branch 'decoder-experiments' into ft8call-develop\n- Added clear activity functions to the menu.\n- Added shortcuts to time drift controls in the menu\n- Reset drift average on clear\n- Added time drift auto stop after a number of decoders. Edited decode positions\n- Disabled alt position decoding for now...\n- Auto time drift stop label\n- Cleanup\n- Removed conditional E\n- Fixed a few auto drift bugs\n- Enabling Ultra for experimentation\n- Fixed ACKs encoding\n- Pulling out more unused fortran code\n- Fixed waterfall affecting decode range when filter is disabled\n- Add maximum filter spinbox, menu item in waterfall, and proper controls for handling editing\n- Removed xcor fortran code\n- Fortran cleanup take two\n- Disabling Ultra for now...decoder needs some work\n- Fixed #340: help and version should be command line output\n- Fixed #339: flushed text buffers on file save for logbook.\n- Added fsync for unix/windows in file utils\n- Added either libgfortran3 or libgfortran5 for debian","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"2.2.0","site":"http://files.js8call.com/latest.html","source":"WinGet","license_or_tos":"Proprietary Software","resources":null,"verified":false}