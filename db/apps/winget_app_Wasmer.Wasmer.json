{"appId":"winget_app_Wasmer.Wasmer","appShortcutName":"Winget Application","appDisplayName":"Wasmer","authorId":"winget","releaseTagName":"winget-5.0.0","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/wasmerio/wasmer/releases/download/v5.0.0/wasmer-windows.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"The leading WebAssembly Runtime supporting WASI and Emscripten\n\nWasmer is a fast and secure WebAssembly runtime that enables super lightweight containers to run anywhere: from Desktop to the Cloud, Edge and IoT devices.\nThe main star of this release is the experimental support for three new backends: v8, wamr and wasmi. Also, many dependencies, namely LLVM, Cranelift, and rkyv are updated which bring significant enhancements.\nAdded\n- #5185 Add execution benchmarks\n- #5174 chore(wasix): Additional logging in wasix HTTP client\n- #5152 Experimental: add support for loongarch64 on LLVM\nChanged\n- #5188 feat: Rename wasmer-api to wasmer-backend-api\n- #5186 Remove support for emscripten\n- #5181 Sunset wasmer-registry, wasmer-interface and update misc dependencies\n- #5165 5.0.0-rc.1 post release\n- #5151 Remove negative variant of exit code\n- #5153 Terminate entire wasix process when a worker thread fails or calls exit\n- #5172 chore(backend-api): Update GraphQL schema\n- #5176 Remove unused edge-util dependency\n- #5171 Refactor webc usage\n- #5144 Implement app-deployment related CLI commands\n- #5163 Correct the example of the README in the WASIX crate\nFixed\n- #5184 fix(api/wamr): Build wamr on iOS\n- #5179 Fix build CI\n- #5178 Fix usage of exit code\n- #5162 Fix append-ness of new fd affecting old fds\n- #5160 Fix fd with append flag can't seek correctly","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"5.0.0","site":"https://wasmer.io","source":"WinGet","license_or_tos":"MIT","resources":null,"verified":false}