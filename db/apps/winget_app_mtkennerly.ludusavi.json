{"appId":"winget_app_mtkennerly.ludusavi","appShortcutName":"Winget Application","appDisplayName":"ludusavi","authorId":"winget","releaseTagName":"winget-0.27.0","downloadUrls":{"1":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":null,"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Backup tool for PC game saves\n\n\n* Added:\n  * Support for installing via [cargo-binstall](https://github.com/cargo-bins/cargo-binstall).\n* Changed:\n  * Windows registry backups are now saved as `*.reg` files instead of `*.yaml`.\n    Existing backups will not be affected.\n  * On Linux, Ludusavi previously reported its application ID as just `ludusavi`,\n    which meant the desktop file should be named `ludusavi.desktop` to show the right icon.\n    However, that name does not follow the Freedesktop.org `desktop-entry` specification.\n\n    To better conform, Ludusavi now reports its ID as `com.mtkennerly.ludusavi`\n    (except for Flatpak, which will use `com.github.mtkennerly.ludusavi` for legacy reasons).\n    If you need to preserve the original behavior,\n    you can set `LUDUSAVI_LINUX_APP_ID=ludusavi` in your environment variables.\n\n    ([Prototyped by OlegAckbar](https://github.com/mtkennerly/ludusavi/pull/417))\n  * Dialogs (folder picker and `wrap --gui` prompts) now use GTK on Linux.\n    The previous system relied on Zenity/KDialog,\n    which could behave poorly depending on the version or in a Flatpak context.\n  * The standalone Mac release is now compiled on Mac OS 13 instead of Mac OS 12\n    because of [a change by GitHub](https://github.com/actions/runner-images/issues/10721).\n  * Updated translations.\n    (Thanks to contributors on the [Crowdin project](https://crowdin.com/project/ludusavi))\n* Fixed:\n  * The registry format change also resolved an issue where very large (over 100 MB)\n    `registry.yaml` files could be slow to read and consume a lot of extra memory,\n    whereas the same data in `.reg` format can be loaded without issue.\n  * When set to only keep 1 full backup and 0 differential backups using the simple format,\n    Ludusavi keeps the existing backup in place and just adds/removes any changed files.\n    However, after removing obsolete files, Ludusavi could leave empty directories behind.\n    Now, Ludusavi will clean these up as well after creating a new backup for a game.\n  * GUI: After a backup, if a file were removed,\n    its change status wouldn't immediately refresh.\n  * GUI: When performing a multi-game scan with a filter active,\n    the visible games would be backed up or restored even if they were disabled.\n  * GUI: When performing a multi-game scan on the restore screen with a filter active,\n    the scan would exclude games that were disabled for backup rather than disabled for restore.\n  * Ludusavi would try to scan games (custom or from secondary manifest) with a blank title.\n    In the GUI, they would be omitted from the results,\n    while on the CLI, they would be reported without a title.\n    Now such games are ignored when scanning.","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"0.27.0","site":"https://github.com/mtkennerly","source":"mtkennerly","license_or_tos":"MIT","resources":null,"verified":false}