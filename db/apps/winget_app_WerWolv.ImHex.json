{"appId":"winget_app_WerWolv.ImHex","appShortcutName":"Winget Application","appDisplayName":"imhex","authorId":"winget","releaseTagName":"winget-1.35.4","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/WerWolv/ImHex/releases/download/v1.35.4/imhex-1.35.4-Windows-x86_64.msi"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"A Hex Editor for Reverse Engineers, Programmers and people who value their retinas when working at 3 AM.\n\nA Hex Editor for Reverse Engineers, Programmers and people who value their retinas when working at 3 AM.\nImprovements\n- Pattern hover highlighting performance has been drastically improved\n- Completely eradicated any Window flickering during resizes on Windows and the Web\n- Toolbar items now have tooltips\n- The web version can now be properly used on mobile and with touch inputs\n- Custom plugins can once again be built using the SDK\n- File dialogs now belong to the ImHex window on Linux. Thanks a lot to @btzy\nBug Fixes\n- Fixed a crash that triggered when an auto backup was being created on macOS\n- Fixed liblzma not being configured in correctly on all OSes\n- Having debug mode enabled in a pattern no longer makes the UI lag out after evaluation\n- The find and goto popups no longer go transparent when opening a combo box within them\n- Fixed a rare crash when re-evaluating patterns while a sorting option was selected\nPattern Language\n- Added builtin crc8, crc16 and crc64 hash functions\n- The crc functions can now also be used with strings\n- Fixed a bug where patterns passed to non-type template parameters would get hidden\n- std::mem::find_sequence and co are now HUNDREDS of times faster. This includes std::mem::MagicSearcher\nPrevious Release\nAdditions\n- Added basic process memory provider support to macOS\n    - Due to limitations on Apple's side, this only works with SIP disabled\n- View providers can now be renamed\n- Added options to load files into memory or read data from disk instead, independent of the file size\n- Find results can now be exported as CSVs, TSVs and JSONs. Thanks a lot to @SparkyTD\n- Added various per-byte highlights to the hex editor minimap\n    - The minimap can now display the highlighting of individual bytes\n- Added a digital signal pattern visualizer\n- The pattern data view now uses nicer colors and strings to convey information\n- The recent files section on the welcome screen can now be collapsed\n- You can now scroll the hex editor view faster by holding down CTRL or even faster when holding down SHIFT + CTRL\n- Added a --reset-settings CLI command to clear all settings in case something gets corrupted\nImprovements\n- Drastically improved rendering times\n- Added a small moon icon to the welcome screen in nightly builds\n- Providers now close instantly\n- The hex editor view no longer scrolls when jumping to a selection that's already visible\n- Auto project backups are now enabled by default\n- Custom data inspector rows now display a nice error message in the UI when they encountered an error\n- Bookmark reordering now doesn't swap entries anymore and actually works as expected\n- ImHex now displays a little dot in the close button on macOS if there's unsaved changes\n- Auto backups no longer remove the dirty status of providers anymore\n- SIGINT signals are now being handled to not close ImHex immediately anymore but to show a popup\n- UI scaling factors are now limited between 0.1x and 4.0x to prevent issues\n    - Larger values are still possible by CTRL-clicking into the slider and entering a value manually\n- PageUp + PageDown no longer affects the hex editor selection\n- Row highlighting in the pattern data view is now less bright so the text has a better contrast\nBug Fixes\n- ImHex can now properly load files stored on network drives on Windows\n- Fixed crashes when searching for certain regex strings\n- Fixed an infinite loop when searching forward/backward with CTRL + F\n- Fixed loading of layout files\n- Fixed fonts being blurry in some cases\n- Bookmark regions can now be set to 1 byte\n- Fixes Alt and Ctrl being swapped in the text editor on macOS\n- Fixed disassembler always disassembling in little endian\n- ImHex no longer tries to store files in system paths now\n- Fixed an infinite loop when exporting data selections to a file. Thanks a lot to @FireNX70\n- Fixed file name display issues with files that contain unicode characters\n- Fixed content store getting stuck sometimes when updating multiple items at once\nPattern Language\n- continue and break now work as one would expect\n- Added std::core::execute_function()\n- Arrays can now be initialized using the following syntax:\n    - u32 myArray[5] = { 1, 2, 3, 4, 5 };\n- Added support for constants inside of custom types\n- Unsigned, signed and floating point patterns no longer display their hex value in their value by default\n- Fixed [[no_unique_address]] not working correctly with bitfields\n- Patterns are now highlighted in the hex editor view when hovering over them in the pattern data view\n- Patterns in the pattern data view table are now highlighted when they are fully selected in the hex editor view\n- Bitfields can now be properly edited in the pattern data view\n- The filter in the pattern data view now gets correctly applied again after re-evaluating a pattern","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"1.35.4","site":"https://github.com/WerWolv/ImHex","source":"WinGet","license_or_tos":"GPL-2.0","resources":null,"verified":false}